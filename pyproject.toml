[tool.poetry]
name = "shaped-ai-tap-iceberg"
version = "0.0.1"
description = "`tap-iceberg` is a Singer tap for Iceberg, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Ben Theunissen <ben@shaped.ai>"]
keywords = [
    "ELT",
    "Iceberg",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
license = "Apache-2.0"
packages = [
    { include = "tap_iceberg" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
importlib-resources = { version = "==6.4.*", python = "<3.9" }
singer-sdk = { version = "~=0.39.0", extras = ["faker",] }
fs-s3fs = { version = "~=1.1.1", optional = true }
pyiceberg = { version = "0.7.0", extras = ["s3fs", "glue", "hive", "sql-sqlite"] }
pyarrow = { version = ">=16.0.0" }

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
singer-sdk = { version="~=0.39.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true

[tool.ruff]
src = ["tap_iceberg"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
    "D100", # missing-docstring
    "D102", # missing-module-docstring
    "PLR0911", # missing-return-type
    "PLR0912",
    "PLR2004",
    "C901", # complex code
    "PTH103",
    "PTH110",
    "BLE001",
    "S101",
    "S110",
    "RET505",
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_iceberg"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-iceberg = 'tap_iceberg.tap:TapIceberg.cli'
